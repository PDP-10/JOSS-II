	SUBTTL	USER OPERATION (UUO) INTERPRETER
;	PAGE 38

;	     	USES 00X CLASS OF PROGRAMMED OPERATORS, ASSUMES AN OUTPUT
;		POINTER IN C, CLOBBERS A AND B. CHARACTER SHOULD BE ASCII
;		AND MUST BE LEFT JUSTIFIED IN THE "FROM" LOCATION.

PROP:	Z
	EXCH	B,30;		SAVE FOR RECOVERY
	LDB	B,[POINT 3,40,5]; GET OP CODE
	JUMPE	B,XMTR;	 	ZERO IS THE TRANSMITTER
	CAIG	B,4;		TEST RANGE
	JRST	.+1(B);		GO TO PROPER ROUTINE
	JRST	PR1
	JRST	INSR;		INSERT OP
	JRST	R2;		CHANGE STATE
	JRST	R3;		SEND CHAR STRING TO BUFFER
	JRST	R4;		HALT ROUTINE

PR1:	HRRZ	J,PROP
	CAIG	J,INTBEG
	JRST	H3;		GO TO SIMULATE HALT 3
	MOVEI	A,75
	JRST	KILL;		GO TO ELIMINATE THE USER

H3:	MOVEI	B,3;		ILLEGAL UUO--NON-INTERPRETER
	MOVEM	B,40;
	JRST	R4

XMTR:	MOVE	B,[POINT 7,0]
	HRR	B,40
	MOVEM	B,MISC;		POINTER FOR INPUT STRING
	LDB	B,[POINT 7,40,12]; GET "M" THE CHARACTER COUNT
	JUMPE	B,H3;	 	ZERO CHAR COUNT - PROBABLY AN ERROR
	ILDB	A,MISC
	IDPB	A,C;		MOVE THE CHARACTERS
	SOJG	B,.-2
	JRST	2,@PROP;	RETURN FROM PROGRAMMED OP

INSR:	MOVE	A,40;		GET THE CHARACTER
	IDPB	A,C;		DEPOSIT IN OUTPUT STRING
	JRST	2,@PROP;	RETURN

R2:	HRRZ	E,40;		GET DESTINATION STATE
	TSX	CHS.;		GO TO ROUTINE
	JRST	2,@PROP;	RETURN FROM PROGRAMMED OP

R3:	HRL	E,40;		ADDRESS OF CONTROL WORD
	TSX	BJ9.1;		TO SEND ROUTINE
	JRST	2,@PROP

	SUBTTL	HANDLE MACHINE FAILURE HALTS -- TRY TO RECOVER
;	PAGE 39

,		HALT ROUTINE
;
;		THIS ROUTINE EITHER HALTS ON ERROR OR ATTEMPTS
;		A RECOVERY OF THE SYSTEM FROM DRUM AND RESTART
;		OF JOSS FROM INITIAL CONDITIONS. APPROPRIATE ERROR
;		MESSAGE AND DUMPS ARE WRITTEN AT THE CONSOLE.
;		REGISTER 1 (B) HAS BEEN SAVED IN LOCATION 30.

R4:	FSW	B
	TRNN	B,HALTS;	SKIP IF HALTING
	JRST	R4.1
	HRR	B,40
	ADDI	B,777000
	HRRM	B,R4.99;	SIMULATE LOCAL HALT
	MOVE	B,30;		RECOVER REGISTER
R4.99:	JRST	4,777000

;	ATTEMPT RECOVERY FROM THE DRUM

R4.1:	CONO	PI,110000;	KILL PI SYSTEM AND PARITY FLAG
	CONO	APR,210000;	KILL PROCESSOR INTERRUPTS
	MOVE	B,[XWD YEAR,31]
	BLT	B,35;		SAVE DATE AND TIME
	MOVEM	C,42
	MOVEM	D,43
	MOVE	B,0(17)
	MOVEM	B,SA+2;		@17
	HRRZ	B,0
	MOVE	B,0(B)
	MOVEM	B,SA+3;		@0
	MOVE	B,-1(J)
	MOVEM	B,SA+1;		@J
	JRST	RJD;		GO TO READ DRUM

	SUBTTL	PROCESSOR INTERRUPT ROUTINES
;	PAGE 40

;		CHANNEL 7 INTERRUPTS

APRR:	Z
	CONSO	APR,1000;	IT IS THE CLOCK ISNT IT?
	JRST	CHECK;		PARITY, NOEX MEM, PDL OV
CLOCK:	AOS	TIME;		DUMP SYSTEM CLOCK
	SOSN	D.TIME;		TIME OUT THE DISC ROUTINES
	JSR	DISC.C;		TRY TO RECOVER DROPPED TRAP
	CONO	APR,1000+CAPR;	TURN OFF THE FLAG
	CONO	500,1;		PULSE THE "JOSS HERE" FLOP
	AOS	T.CU;		BUMP THE CURRENT USER CLOCK
	AOS	TICK;		INCREMENT TICKER
	AOS	SECONDS;	TICK COUNT (SOURCE OF TIMER)
	EXCH	B,TICK
	CAIGE	B,^D60;		SKIP IF ONE SECOND
	JRST	CL3
	MOVEM	C,CL9;		SAVE REGISTER
	AOS	B,SEC;		BUMP SECOND COUNT
	TRNE	B,3;		SKIP IF NOT 4 SEC BOUNDARY
	JRST	CL6;		GO TO BEEP SIGNALLED CONSOLES
CL8:	HRRZ	B,APRR;		FETCH INTERRUPT ADDRESS
	CAMN	B,CL12;		SKIP IF DIFFERENT THAN LAST TIME
	JRST	CL14
	HRRM	B,CL12;		SAVE LOC COUNTER
CL18:	SETZM	CL13;		ZERO COUNT
CL5:	FSW	B
	TRNE	B,BEEPS;	DO WE WANT TO BEEP
	JSR	C30;		GO MAKE NOISE
	TRNN	B,SDS;		SKIP IF SHUTTING DOWN
	JRST	CL4
	MOVE	B,SEC
	CAIG	B,^D5;		BEEP FOR 5 SEC EACH MIN
	JSR	C30

	SUBTTL	PROCESSOR INTERRUPT ROUTINES
;	PAGE 41

CL4:	MOVE	B,CT46;		INPUT INTERRUPTS
	IMULI	B,^D2000
	IDIV	B,USERS
	JSR	CVTL1
	AOS	IINT(C)
	MOVE	B,CT47;		OUTPUT INTERRUPTS
	IMULI	B,^D2000
	IDIV	B,USERS
	JSR	CVTL1
	AOS	OINT(C)
	MOVE	B,CT46
	ADD	B,CT47
	IMULI	B,^D2000
	IDIV	B,USERS
	JSR    CVTL1
	AOS	TINT(C)
	SETZM	CT46
	SETZM	CT47
	MOVE	C,CL9
	MOVEI	B,0;		ZERO THE TICKER
CL3:	EXCH	B,TICK
	EXCH	B,T.CU
	CAML	B,T.MAX
	JRST	CL2;		YES TIME IS UP
CL1:	EXCH	B,T.CU;		NO INTERRUPT YET
	JRST	12,@APRR

CL2:	SKIPN	SS99
	SKIPN	DMBY;		NOT MUCH POINT IF DRUM IS BUSY
	AOS	COMEBACK;	SET INTERRUPTER RETURN FLAG
	JRST	CL1

	SUBTTL	PROCESSOR INTERRUPT ROUTINES
;	PAGE 42

;	BEEP SIGNALLED CONSOLES EACH 4 SECONDS

CL6:	MOVE	B,CONSOL
	AOS	B;		START WITH FIRST JOSS CONSOLE
CL7:	CAIG	B,N.S*S.M;
	JRST	CL8;		FINISHED - ALL STATIONS TESTED
	SKIPN	TTT(B)
	AOJA	B,CL7;		NO SIGNAL - TRY NEXT
	LSHC	B,-1;		GET "TO" CONSOLE NUMBER
	JSR	C32;		BEEP THE CONSOLE
	LSHC	B,1
	AOJA	B,CL7;		CONTINUE SEARCH

;	DETECT INDIRECT ADDRESS LOOPS

CL14:	AOS	B,CL13;		COUNT INTERRUPT WITH THE SAME PC
	CAIG	B,^D10
	JRST	CL5;		NOT EXCESSIVE YET

;	TEN EVEN SECOND WITH THE SAME PC - TEST FOR ADDRESS LOOP

	MOVEM	D,CL10
	MOVEI	C,100
	MOVEM	C,CL11;		INDIRECT DEPTH COUNT
	MOVE	C,@APRR;	INITIAL WORD
CL15:	MOVE	D,C
	LDB	B,IRPTR;	GET INDEX REGISTER ADDRESS
	JUMPE	B,CL16;		JUMP IF NO INDEX
	CAIGE	B,4
	HRRZ	C,TICK-1(B);	GET STORED REGISTER
	CAIL	B,4
	HRRZ	C,(B)
	ADD	C,D;		ADDRESS PLUS IR CONTENTS
	CAIL	B,4
	MOVE	C,(C);		GET ADDRESSED WORD
	CAIGE	B,4
	MOVE	C,TICK-1(B);	IF SAVED
CL16:	TLNN	D,20;		SKIP IF INDIRECT BIT SET
	JRST	CL17;		END OF ADDRESS CHAIN
	SOSLE	CL11;		COUNT INDIRECT LEVELS
	JRST	CL15
H33:	HALT	33;		INDIRECT ADDRESS LOOP

CL17:	MOVE	D,CL10;		RESTORE REGISTER D
	JRST	CL18;		WASNT A LOOP

IRPTR:	POINT	4,C,17;		POINTER TO INDEX FIELD

	SUBTTL	CONSTANTS
;	PAGE 43

BLANKS:	ASCII	?     ?
	ASCII	?     ?
ZERO:	0
CRS:	OCT	064321506432;	FIVE CARRIAGE RETURNS
CRLF:	OCT	064240000000;	CR, LF, AND ZEROS
BELF:	ASCII	?
?

C3:	POINT	7,INITIAL
C4:	POINT	7,JOBNO
C5:	POINT	6,SWITCH,^D17;	POINTER TO DISPLAY LINE NUMBER
