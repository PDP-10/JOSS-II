	SUBTTL	DISC ENTRY ROUTINES
;	PAGE 55

;	DISC ACTION ROUTINES

DREQ:	MOVEI	A,1
	SETZM	SPARE4;		RESET DISC AVAILABLE FLAG
	DPB	A,S.DU;		FLAG AS DISC USER
	SKIPN	DKBY;		SKIP IF DISC IS BUST
	JRST	SIGPR1
DREQ1:	AOS	DKBY;		SET DISC BUSY SWITCH
	SETOM	SPARE4;		TELL JOE HE GOT THE DISC
	JRST	MONEXIT;	RETURN TO INTERPRETER


DCONT:	CONSO	PI,CHDC
	JRST	DCONT1;		JUMP IF DC IDLE
	CHS	DCT.S;		WAIT FOR DC TO IDLE
	JRST	SIGPR1
DCONT1:	CHS	DIP.S;		DISC IN PROGRESS QUEUE
	JSR	DISC.C;		CONTINUE TO DISC ACTION
	JRST	SIGPR1

DCOMP:	SETZB	B,DKBY;		INDICATE DISC IDLE
	DPB	B,S.DU;		RESET DISC FLAG
	EXCH	S,MISC
	SKIPN	S,DQ;		SKIP IF SOMEONE IN THE QUEUE
	JRST	DCP1;		NONE IN QUEUE
	AOS	DKBY;		BUST THE DISC
	SUBI	S,S.Q;
	CHS	COM.S;		ACTIVATE USER
DCP1:	EXCH	S,MISC
	LDB	A,S.OFR;	GET OFF FLAG
	JUMPE	A,MONEXIT;	RETURN TO INTERPRETER
	TSX	OFFNQ;		DO OFF PROCESSING
	JRST	SIGPR1

;	DISC RESTART ROUTINE

DSTRT:	CONSZ	PI,CHDC
	DONE;			NO RESTART IF DC IS BUSY
	SUBI	S,S.Q
	CHS	DIP.S
	JSR	DISC.C;		CONTINUE DISC ACTION
	DONE

	SUBTTL	PRODUCE DISC ACCOUNTING RECORD
;	PAGE 56

;	ACCOUNT FOR DISC USAGE AT DISCARD TIME
;	USES REGISTERS B,E,S; ENTERED VIA PUSHJ PP,ADIS.

ADIS:	MOVEI	C,1
	MOVS	B,DISC.D(C)
	CAMN	B,DISC.D(C);	SKIP IF DATES ARE DIFFERENT
	DONE;			NO ACCOUNTING
	TSX	GETBUF
	DONE;			IN THIS CASE THEY GO FREE
	MOVE	B,FILE
	MOVEM	B,^D7(E)
	MOVE	B,KEY
	MOVEM	B,^D8(E)
	MOVE	B,MINT(S)
	MOVEM	B,^D9(E)
	MOVE	B,[XWD ^D9,^D9]
	MOVEM	B,1(E)
	MOVEI	B,2(E);		TO ADDRESS
	HRLI	B,DISC.D;	ADDRESS OF ACCOUNTING DATA
	MOVE	S,B
	BLT	B,4(S);		MOVE TO BUFFER
	HRRZ	B,PROG
	HRRM	B,2(E)
	MOVE	A,6(E)
	TLNE	A,777777;	CHECK FOR BINARY
	TSX	TLT;		NO - CONVERT FROM ASCII
	TLNE	A,777777
	MOVEM	F,6(E)
	MOVE	S,[DEC -2];	CONTEXT FOR TAPE
	TSX	PUTB
	DONE

TLT:	SETZM	F
	MOVE	C,[POINT 7,A]
TLT1:	ILDB	D,C
	CAIN	D," ";		WE ARE DONE ON THE FIRST BLANK
	DONE
	ANDI	D,17
	IMULI	F,^D10
	ADD	F,D
	JRST	TLT1

	SUBTTL	CONVERSION ROUTINE - BINARY TO BASE TEN ASCII
;	PAGE 57

;		THE NUMBER IN A IS CONVERTED AND STUFFED IN THE STRING
;		AT C, B IS CLOBBERED

BTA:	SETZM	B
	IDIVI	A,^D10
	HRLM	B,0(PP);	PUT REMAINDER AWAY ON PDL
	JUMPE	A,BTA1;		END, GO TO OUTPUT
	TSX	BTA;		RECURSE

BTA1:	HLRZ	A,0(PP);	RECOVER DIGIT
	ORI	A,60;		PUT IN THE ASCII BITS
	IDPB	A,C;		DEPOSIT IN STRING
	DONE

	SUBTTL	RETURN BLOCKS OF CORE
;	PAGE 58

RCOR:	LDB	C,S.BLOCK
	MOVE	D,[POINT 6,CT48A]
	ILDB	A,D
	SOJG	C,.-1
	SUBI	A,1;		DECREMENT SIZE DISTRIBUTION
	DPB	A,D
	LDB	C,S.BLOCK
	SUB	C,E
	CAIGE	C,1
H23:	HALT	23;		ATTEMPT TO RETURN ALL USER CORE
	DPB	C,S.BLOCK;	SET NEW USER SIZE
	MOVE	D,[POINT 6,CT48A]
	ILDB	A,D
	SOJG	C,.-1
	ADDI	A,1
	DPB	A,D;		INCREMENT SIZE DISTRIBUTION
	LDB	C,S.BLOCK
	LDB	A,S.COR
	SUBI	A,BBLOCK
	ADD	C,A
	ADD	C,E;		LOCATION OF BLOCKS TO BE RELEASED
	SUBI	C,1
	SETZM	CORE(C);	ZERO THE FREED BLOCKS
	SOJG	E,.-2
	TSX	SRR;		RESET PROTECT
	JRST	MONEXIT

