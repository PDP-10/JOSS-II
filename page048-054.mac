	SUBTTL	MONITOR-INTERPRETER INTERFACE
;	PAGE 48

;	DECODE INTERPRETER SIGNALS

MONENT:	EXCH	S,CUI;		RESTORE THE USER INDEX
	MOVE	C,T.CU
	LDB	D,S.TM
	SUB	C,D;		TICKS SINCE LAST ENTRY
	ADDM	C,USTAT(S);	ACCUMULATE IN USER STATE BLOCK
	ADDM	C,COMTIM;	UPDATE USERS COMPUTE TIME
	ADDM	C,CT13;		UPDATE COMPUTE TIME THIS MINUTE
	ADDM	C,CT44;		ACCUMULATE TIME COMPUTING
	LDB	A,S.BLOCK;	NUMBER OF CORE BLOCKS
	IMUL	A,C
	ADDM	A,SPARE3;	INTEGRATE TIME X CORE SIZE="CHARGE UNITS"
	SETZB	A,T.CU
	DPB	A,S.INR;	RESET POSSIBLE IN SIGNAL
	ADD	C,D
	DPB	A,S.TM
	EXCH	PP,PPSAV;	RESTORE MONITOR PP REGISTER
	CALL	B,L.ETSW;	CHECK FOR WITHIN LIMIT.
H5:	HALT	5;		BAD SIGNAL FROM JOE
	JRST	@ENTSW(B);	INTERPRET ENTRY.

;	INTERPRETER SIGNAL TYPES

ENTSW:	JRST	SU;		0 - SWITCH TO USER
	JRST	BUFFER;		1 - GET A BUFFER
	JRST	REBUF;		2 - RETURN A BUFFER
	JRST	TL;		3 - TRANSMIT BUFFER TO USER
	JRST	TLSU;		4 - TRANSMIT AND SWITCH TO USER
	JRST	CONT;		5 - BREAK POINT RESPONSE
	JRST	DREQ;		6 - REQUEST DISC
	JRST	DCONT;		7 - CONTINUE DISC ACTION
	JRST	DCOMP;		8 - DISC ACTION COMPLETE
	JRST	MORCOR;		9 - GET ANOTHER BLOCK OF CORE
	JRST	MORCI;		10 - IMPERATIVE MORE CORE
	JRST	PAGE;		11 - MAKE UP AND SEND PAGE HEADING
	JRST	QUIT;		12 - GET USER OFF
	JRST	RCOR;		13 - RETURN BLOCKS OF CORE
	JRST	PAUSE;		14 - PAUSE FOR SIGNALS AND (E) SECONDS
	JRST	WAIT;		15 - PAUSE (E) SECONDS
L.ETSW=.-ENTSW+1;		LENGTH OF THE SWITCH
	Z;			SPARE

;	RETURN TO INTERPRETER

MONEXIT:MOVEI	G,INTENT;	INTERPRETER CONTEXT
MONE1:	EXCH	S,CUI
	EXCH	PP,PPSAV;	SAVE MONITOR PP REGISTER
	SETZM	COMEBACK
	JRST	@0(G);		GO TO PROPER INTERPRETER

	SUBTTL	INTERPRETER-MONITOR ENTRY ROUTINES
;	page 49

,	COMPUTATION BREAK

CONT:	CAMGE	C,T.MAX;	HAS HE HIT MAX?
	JRST	CONT1;		NO
	CHS	COM.S;		PUT CURRENT USER ON END OF LIST
	JRST	SIGPR1

CONT1:	AOS	CSS;		SET TOP OF QUEUE FOR CHS
	DPB	C,S.TM
	CHS	COM.S;		PUT ON TOP OF COMPUTE QUEUE
	SETZM	CSS;		RESET SWITCH
	JRST	SIGPR

,	TRANSMIT LINE TO USER

TL:	TSX	PUTB;		ATTACH BUFFER TO USER
	JRST	MONEXIT;	  GO BACK TO INTERPRETER
TLSU:	TSX	PUTB;		ATTACH BUFFER TO USER
	JRST	SU1

;	SWITCH CONSOLE TO USER

SU:	CAML	S,CONSOL;	SKIP IF TTY CONSOLE
	JRST	SU.5
	TSX	GETBUF
	JRST	SU3;		NO BUFFER--GO TO WAIT
	HRLZI	B,574000;	LEFT ARROW CHARACTER
	MOVEM	B,3(E);		STASH IN BUFFER
	TSX	PUTB;		TRANSMIT TO USER
SU.5:	HRRZ	E,S.BUF(S);	PICK UP BUFFER HEADER
	SETZM	RISIG;		RESET "IN" SIGNAL.
	JUMPE	E,SU2;		JUMP IF NO BUFFER ATTACHED.
SU1:	CHS	DSU.S;		PUT ON END ON DSU QUEUE.
	JRST	SIGPR1;		TO PROCESS SIGNALS.

SU2:	TSX	GETBUF
	JRST	SU3
	HRL	E,E
	MOVEM	E,S.BUF(S);	LINK BUFFER TO USER
	TSX	SG;		SWITCH GREEN
	JRST	SIGPR1

SU3:	CHS	ABG.S;		TO WAIT BUFFER FOR GREEN QUEUE.
	JRST	SIGPR


;	PAGE 50

;	WAIT FOR SIGNALS AND TIME

PAUSE:	MOVEI	B,1
	DPB	B,S.SIG

;	DELAY USER FOR (E) SECONDS

WAIT:	CHS	QP.S;		TO PAUSE STATE
	TSX	ISEC
	ADD	B,E
	CAILE	B,^D24*^D3600
	SUBI	B,^D24*^D3600
	SKIPE	E;		NO TIME SPECIFIED
	HRLM	B,S.Q(S);	SAVE WAKEUP TIME IN QUEUE WORD
	JRST	SIGPR


;	PAGE 51

;	GET A BUFFER

BUFFER:	MOVE	E,N.CK;		GET THE CHOKE NUMBER
	HRRZ	B,S.BUF(S);	GET TOP BUFFER LOCATION
	JUMPE	B,BU2;		OK - GET A BUFFER FOR HIM
	HRRZ	B,0(B);		GET NEXT ON LIST
	SOJG	E,.-2;		JUMP IF HE SHOULD NOT BE CHOKED
	CHS	CK.S;		HE HAS ENOUGH ALREADY--CHOKE UP
	JRST	SIGPR1

BU2:	TSX	GETBUF
	JRST	.+2;		NO BUFFER
	JRST	MONEXIT
BUF1:	CHS	UC.S;		PUT ON ABR-UC QUEUE
	JRST	SIGPR1

;	RETURN A BUFFER

REBUF:	TSX	MBA1;		PUT BUFFER ON AVAILABLE
	JRST	MONEXIT;	GO BACK TO INTERPRETER


;	PAGE 52

,	FINAL "OFF" FOR USER

QUIT:	LDB	C,S.BLOCK
	MOVE	D,[POINT 6,CT48A]
	ILDB	B,D
	SOJG	C,.-1
	SUBI	B,1
	DPB	B,D;		DECREMENT BLOCK SIZE DISPLAY
	SETZM	MINT(S)
	LDB	B,S.COR
	JUMPE	B,Q2;		NOT IN CORE--MUST BE A GRONK
	SUBI	B,BBLOCK;	COMPUTE PHYSICAL LOCATION
	LDB	C,S.BLOCK;	GET NUMBER OF BLOCKS
	SETZM	CORE(B);	RESET CORE MAP
	AOS	B
	SOJG	C,.-2;		FOR ALL ASSIGNED BLOCKS
	SOS	CT39;		DECREMENT # OF IN CORE USERS
Q2:	LDB	A,S.STA
	SETZM	S.S(S);		ZERO HIS STATUS
	DPB	A,S.STA;	EXCEPT STATE
	MOVEI	A,1
	DPB	A,S.BLOCK;	INITIAL BLOCK SIZE
	CHS	OF.S
	FSW D
	TRNN	D,OFFS;		DONT RE-ENABLE IF BLASTING OFF
	JSR	C31
	MOVE	D,[ASCII ?OFF-?];	DISPLAY OFFS ON CONSOLE TTY
	TSX	DOF
	JRST	SIGPR1


;	PAGE 53

;	SEND PAGE HEADING

;		OUTPUT PAGE HEADING LINE TO USER. ON INPUT  REGISTER E
;		CONTAINS A BUFFER ADDRESS

PAGE:	MOVE	C,[POINT 7,3(E)]; POINTER TO BUFFER BEGINNING
	SKIPL	E;		PAGED ALREADY!
	INS	14;		FORM FEED
	MOVE	A,HR
	TSX	CTDR;		CONVERT HOURS WITH LEADING BLANKS
	INS	":";		  INSERT A ":"
	MOVE	A,MIN
	TSX	CTD;		CONVERT MINUTES WITH LEADING ZEROS
	XMT 2,BLANKS
	XMT 12,DATE
	INS	"#"
	MOVE	A,S
	TSX	BTA;		CONVERT AND OUTPUT CONSOLE #
	XMT 5,INITIALS
	XMT 5,JOBNO
	CAML	S,CONSOL;	SKIP IF TTY CONSOLE
	XMT 4,BLANKS;		CENTER PAGE NUMBER FOR JOSS CONSOLE
	AOS 	B,PAGNO;	FETCH AND INCREMENT PAGE NUMBER
	CAIGE	B,^D100;	CENTER PAGE NUMBER A LITTLE
	XMT 1,BLANKS
	INS	"["
	MOVE	A,PAGNO;	REMEMBER REG. A IS ZERO
	TSX	BTA;		CONVERT TO ASCII BASE TEN
	INS	"]"
	XMT 2,BLANKS
	TSX	HDM;		MAKE UP HEADING MESSAGE
	JRST	TL;		TRANSMIT THE LINE

	SUBTTL	MAKE UP PAGE HEADING MESSAGE
;	PAGE54

HDM:	FSW D;			FETCH DATA SWITCHES
	TRNE	D,PRMES;	SKIP IF NO PRIORITY MESSAGE
	JRST	PG4
	TRNN	D,SDS;		SKIP IF SHUTTING DOWN
	JRST	PG3
	XMT 34,HSDM; PUT SHUTDOWN MESSAGE IN HEADER
	JRST	PG1
PG3:	TRNN	D,DCLOB
	JRST	PG2
	XMT 30,DCLOBM;		SEND DISC CLOBBERED MESSAGE
	JRST	PG1
PG2:	TRNE	D,DAM;		SKIP IF NO DISPLAY
PG4:	SKIPN	D,L.OPM;	IS THERE A MESSAGE
	JRST	PG1;		NOTHING MORE FOR THIS LINE
	MOVE	D,[POINT 7,OPMSG]
	ILDB	A,D
	IDPB	A,C;		MOVE OPERATOR MESSAGE TO HEADING LINE
	SOJG	B,.-2
PG1:	XMT 6,CRS;  SIX CRS
	INS	0
	DONE

L.OPM:	DEC	0;		# CHARACTERS IN OPERATOR MESSAGE
OPMSG:	ASCII	/                              /; ONLY 30 CHAR

;	SHUTDOWN MESSAGE: "PREPARE FOR JOSS SHUTDOWN.".
HSDM:	BYTE	(7)  120,162,145,160,141,162,145,40,146,157
	BYTE	(7)  162,7,40,112,117,123,123,40,163,150
	BYTE	(7)  165,164,144,157,167,156,56,7

,	DISC CLOBBERED MESSAGE: "FILES ARE NOT USEABLE."
DCLOBM:	BYTE	(7)  7,106,151,154,145,163,40,141,162,145
	BYTE	(7)  40,7,156,157,164,40,165,163,7,141
	BYTE	(7)  142,154,145,56
