	SUBTTL	PROCESSOR ERROR RECOVERY
;	PAGE 44

;	TRY TO SAVE THE SYSTEM FROM HARDWARE ERRORS

;		NOTE THAT PROPER RECOVERY FROM MACHINE ERRORS
;		DEPENDS, IN PART, ON A SPECIFIC LOADING ORDER
;		FOR JOSS COMPONENTS.  IN PARTICULAR, THE ORDER
;		SHOULD BE: ARITH,DISTRIB, DISC, SU, CPU, DDT, IU.

CHECK:	CONSO	APR,10000;	SKIP IF NOEX MEM
	JRST	CHECK1
	HRRZ	J,APRR;		GET LOCATION OF ERROR
	CAIG	J,INTBEG
H27:	HALT	27;		NOT A REFERENCE FROM JOE
	CONO	APR,110007;	RESET FLAGS
	MOVEI	A,72
	JRST	10,KILL

CHECK1:	HRRZ	J,APRR;		PICK UP OFFENDING LOCATION
	CONSO	APR,20000;	SKIP IF CPA ILLEGAL OP
	JRST	CHECK2
	HRRZ	J,APRR
	CAIG	J,INTBEG
H31:	HALT	31;		MEMORY PROTECTION VIOLATION--NON-INTERPRETER
	CONO	APR,120007
	MOVE	A,74
	JRST	10,KILL

,	DISCARD A BAD USER BLOCK

KILL:	MOVE	PP,[XWD -N.PP1,PP1-1];	RESTORE MONITOR PUSH REGIS
	MOVE	S,CUI
	LDB	B,S.DU
	JUMPE	B,CHK1
	SETZM	DKBY;		DISABLE POSSIBLE DISC ACTION
	SKIPN	S,DQ
	JRST	CHK1
	AOS	DKBY;		ENABLE NEXT FOR DISC
	SUBI	S,S.Q
	CHS	COM.S
CHK1:	TSX	OGKM
	JRST	QUIT

;	HANDLE PARTIY ERRORS

CHECK2:	CONSO	PI,100000;	SKIP IF PARITY ERROR
H2:	HALT	2;		PDL OVERFLOW
	CONO	PI,100000;	TURN OFF FLAG
	SKIPE	CU;		SKIP IF NO CURRENT USER
	JRST	CHK2
	AOS	CT15;		RECORD IN LOG
	XCT	KILL;		RESTORT PUSH REGISTER
	JRST	10,SIGPR;	GO TO MPL AND HOPE

CHK2:	MOVEI	A,76
	MOVEM	J,MINT(S);	DISPLAY OFFENDING LOCATION
	JRST	10,KILL;		DISCARD USER

	SUBTTL	OUTPUT A GRONK MESSAGE
;	PAGE 45

;	ON ENTRY REGISTER A CONTAINS THE GRONK CODE
;	A GRONK IS REPORTED AT THE CONSOLE TTY BY A LINE OF DATA
;	GIVING THE GRONK CODE (ONE OF THOSE LISTED BELOW), THE
;	NUMBER OF THE CONSOLE GRONKED, AND TWO DATA WORDS WITH
;	CONTENTS AS LISTED BELOW.

;	71- CKSUM FAILURE: 1) CORRECT, 2) INCORRECT
;		IF THE DP OR DR HARDWARE DETECTS AN ERROR THE
;		CONTENTS OF THE LEFT AND RIGHT HALVES OF
;		THE INCORRECT CHECKSUM WORD CONTAIN THE RESULTS
;		OF CONI INSTRUCTIONS ON THE DP AND DR.
;		  FAILURE TO COMPARE FINAL DATAI REGISTER CONTENTS
;		WITH COMPUTER VALUES ALSO TAKE THIS EXIT. IN THIS
;		CASE THE LEFT HALF WILL BE ZERO AND THE RIGHT
;		HALF WILL SHOW NO ERROR FLAG.
;	72- NOEX MEM FROM INTERPRETER
;	73- INITIALS CHECK: 1) BAD INITIALS, 2) GOOD
;	74- CPA ILL OP = PROTECT VIOLATION ON USER BLOCK REFERENCE
;	75- ILLEGAL UUO FROM INTERPRETER CODE
;	76- PARITY ERROR;	2) OFFENDING LOCATION

OGKM:	MOVE	S,CUI
	MOVE	J,A
	TSX	OFFNO;		DO OFF PROCEDURE
	TSX	GETBUF
H26:	HALT	26;		IF SO WE ARE IN TERRIBLE TROUBLE
	MOVE	C,[POINT 7,1(E)]
	XMT 3,BELF
	CAILE	J,100;		SKIP IF A MONITOR CODE
	MOVE	J,0(J);		GET CONTENTS OF JWS PUSH LIST
	MOVE	A,J
	TSX	OCTW
	XMT 2,BLANKS
	MOVE	A,CUI
	TSX	OCT
	XMT 10,GKM
	XMT 2,BLANKS


;	PAGE 46

	MOVE	S,CUI
	MOVE	A,SUM(S)
	TSX	OCTW
	XMT 2,BLANKS
	MOVE	A,MINT(S);	POSSIBLE BAD CHECKSUM
	TSX	OCTW
	XMT 3,BELF
	XMT 3,CRLF
	HRREI	S,-1
	TSX	PUTB
	MOVE	S,CUI
	SETZM	MINT(S)
	AOS	CT21;		COUNT ERROR
	DONE

GKM:	ASCII	?\GRONK!\?;	8 CHARACTERS

	SUBTTL	CONVERT ROUTINES
;	PAGE 47

;	TABLE FOR CONVERSION TO LOGARITHMIC RANGE

CVTLOG:	DEC	500*60
	DEC	200*60
	DEC	100*60
	DEC	50*60
	DEC	20*60
	DEC	10*60
	DEC	5*60
	DEC	2*60
	DEC	1*60
CVTS=.-CVTLOG

,	CONVERT TO LOG RANGE

CVTL:	Z
	MOVEI	C,CVTS
	CAML	B,CVTLOG-1(C)
	SOJG	C,.-1
	JRST	2,@CVTL

,	TRAP TIME COPY OF CONVERT ROUTINE

CVTL1:	Z
	MOVEI	C,CVTS
	CAML	B,CVTLOG-1(C)
	SOJG	C,.-1
	JRST	2,@CVTL1

,	CONVERT A WORD TO OCTAL ASCII
,	  CLOBBERS D,B INPUT IS A.

OCTW:	MOVEI	D,^D12
	MOVE	B,A
OCTW1:	SETZM	A
	LSHC	A,3
	IDPB	A,C
	SOJG	D,OCTW1
	DONE

