
; PG.84 - TABLES FOR SIGNAL INTERPRETATION
	SUBTTL	TABLES FOR SIGNAL INTERPRETATION
	
	
	T2:		POINT	T,T1(F),6;		TABLE OF POINTER TO COLUMNS IN T1
			POINT	7,T1(F),^D13
			POINT	7,T1(F),^D20
			POINT	7,T1(F),^D27
			POINT	7,T1(F),^D34
			
			RADIX	10
	;				ROUTINE NAME TABLE FOR GIVEN SIGNAL AND STATE
	;				COLUMNS ARE: TO,IN,ON,OFF,CR
	
	T1=.
			BYTE	(7)		1,1,1,1,1;	TOF
			BYTE	(7)		1,1,1,9,0;	ON
			BYTE	(7)		0,6,1,9,0;	RC
			BYTE	(7)		13,1,1,9,0;	RI
			BYTE	(7)		13,1,1,9,0;	RIB
			BYTE	(7)		13,5,1,9,0;	UC
			BYTE	(7)		13,6,1,15,0;	COM
			BYTE	(7)		0,0,0,0,0;	CU
			BYTE	(7)		13,6,1,14,0;	DCT
			BYTE	(7)		13,6,1,14,0;	DIP
			BYTE	(7)		12,5,1,9,0;	CK
			BYTE	(7)		13,16,1,14,0;	DQ
			BYTE	(7)		0,1,1,9,3;	GR
			BYTE	(7)		11,1,1,9,0;	DSU
			BYTE	(7)		13,1,1,9,0;	ABG
			BYTE	(7)		13,4,1,15,0;	QP
			BYTE	(7)		13,6,1,15,0;	QDM
			BYTE	(7)		13,7,1,8,0;	QM
			BYTE	(7)		1,1,10,1,1;		OF
			RADIX	8

	;		TABLE OF ROUTINES FOR SIGNAL INTERPRETATION
	
		T3:	HALT	20;		0 - MACHINE ERROR HALT
			NOP;			1 - IGNORE SIGNAL
			NOP;			2 - UNUSED
			TSX		CR.R;	3 - GENERAL CR RESPONSE
			TSX		IN10;	4 - CHANGE TO RI STATE
			TSX		IN20;	5 - CHANGE TO RIB STATE
			TSX		IN50;	6 - RECORD IN SIGNAL
			TSX		IN40;	7 - SEND QUEUE MESSAGE
			TSX		OFFQ;	8 - OFF FROM USER IN THE QUEUE
			TSX		OFFNQ;	9 - OFF FROM ALL OTHERS
			TSX		ON.R;	10 - ON FROM OFF STATION
			TSX		TODSU;	11 - TO FROM STATION IN DSU
			TSX		TOCK;	12 - TO FROM CHOKED STATION
			TSX		TO99;	13 - TO FROM ALL OTHERS
			TSX		OFFD;	14 - FROM A DISCING USER
			TSX		OFF5;	15 - OFF FROM MORE CORE
			TSX		IN30;	16 - INTERRUPT FROM DISC ISSUE
			Z;				SPARE
		H20=T3
		

; PG. 85 - SEND MESSAGES TO ALL IN THE QUEUE

	SUBTTL	SEND MESSAGES TO ALL IN THE QUEUE
	
		SAQM:	HRRZI	F,1;		INITIALIZE PLACE IN QUEUE
				HRRZ	D,QM;		ADDRESS OF FIRST
		SA1:	HRRZ	S,D
				SUBI	S,S.Q;		COMPUTE USER INDEX
				TSX		GETBUF
				DONE
				TSX		SQM;		SEND MESSAGE
				HRRZ	D,0)D) ;	NEXT USER
				AOS		F;			BUMP PLACE IN QUEUE
				JUMPN	D,SA1;		GO AROUND IF MORE USERS
				DONE

; PG. 86 - OFF-SIGNAL ROUTINES

	SUBTTL	OFF-SIGNAL ROUTINES
	
	OFFQ:		SOS		CT28;		OFF FROM USER IN THE QUEUE
				SETZM	MINT(S);	ZERO INITIALS
				CHS		OF.S
				FSW H
				
				TRNN	H,OFFS;		DON'T RE-ENABLE IF BLAST-OFF
				JSR		C31;		RE-ENABLE
				MOVE	H,S
				SKIPE	QM;			SEND MESSAGES TO ALL IN QUEUE
				TSX		SAQM
				MOVE	S,H
				JRST	OFF
	OFFNQ:		SOS		USERS;		OFF FROM USER NOT IN QUEUE
				CHS		TOF.S
	OFF:		MOVE	E,S.BUF(S);	STATION BUFFER HEADER
				JUMPE	E,OF1;		JUMP IF NO MORE BUFFERS AVAILABLE
				TSX		MBA;		PUT BUFFER ON AVAILABLE
				JRST	OFF;		CONTINUE TILL ALL ARE PUT AWAY
				
	;					TURN ON A USER FROM THE QUEUE IF PROPER
	
	OF1:		SKIPN	QM;			SKIP IF SOME IN QUEUE
				DONE
				
	OF2:		MOVE	E,USERS
				CAML	E,N.SON;	SKIP IF USERS < MAX
				DONE
		
				HRRZ	S,QM
				SUBI	S,S.Q;		INDEX OF TOP USER IN QM
				SKIPE	S.BUF(S)
				DONE;
				CHS		ON.S;		CHANGE STATE TO "ON"
				SOS		CT28;		DECREMENT # IN QUEUE
				AOS		USERS
				SKIPE	QM;			TEST FOR NONE IN THE QUEUE
				TSX		SAQM;		SEND MESSAGES TO ALL IN QUEUE
				
	OFF5:		LDB		A,S.DU
				JUMPE	A,OFFNQ;	JUMP IF NOT USING DISC
	OFFD:		MOVEI	A,1
				DPB		A,S.OFR;	FLAG USER OFF DURING DISC TRANSFER
				DONE


; PG. 87 - ON-SIGNAL ROUTINES

	SUBTTL	ON-SIGNAL ROUTINES
	
	ON.R:		HRRZ	E,USERS;	GET NUMBER OF USERS
				CAMGE	E,N.SON;	BIGGER THAN MAX
				JRST	ON5;		NO, GO TO TURN ON.
				CHS		QM.S;		CHANGE STATE TO "QUEUE MESSAGE"
				AOS		F,CT28;		COUNT AND FETCH QUEUE #
				TSX		GETBUF;		GET A BUFFER
				DONE;				NONE, FORGET IT
				TSX		SQM;		SEND QUEUE MESSAGE
				DONE
				
	ON5:		CHS		ON.S;		CHANGE STATE TO "ON"
				AOS		USERS;		COUNT USERS
				DONE


; PG. 88 - SEND A QUEUE MESSAGE

	SUBTTL SEND A QUEUE MESSAGE
	
	SQM:		MOVE	C,[POINT 7,MINT(S) ]
				INS		"Q"
				INS		"#"
				MOVE	A,F
				TSX		CTDB;		PUT QUEUE # IN FOR INITIALS
				INS		" "
				CAIGE	F,^D10
				INS		" "
				MOVE	A,F;		RECOVER QUEUE #
				MOVE	C,[POINT 7,QM2,6]
				TSX		CTDR;		CONVERT AND DEPOSIT HOURS
				IBP		C;			SKIP PAST THE COLON
				MOVE	A,MIN
				TSX		CTD;		CONVERT AND DEPOSIT IN MINUTES
				SEND	QM1;		"YOU ARE # IN THE QUEUE"
				FSW		A
				
				TRNE	A,SDS;		IF SHUTTING DOWN
				SEND	SDM;		SEND SHUT DOWN MESSAGE TO QUEUE
				TSX		PUTB;		SEND TO USER
				DONE
				
				
	QM1:		XWD		.+1,QM3-.-1
				OCT		64241203416;	CR,LF,LF,BELL,BELL
	QM4:		ASCII	/HH:MM/
				OCT		202635772500;	YOU
				OCT		607454520334;	ARE N
				OCT		727334262744;	UMBER
				OCT		202613020322;	 XX I
				OCT		671016464312;	N THE
				OCT		203436562752;	 QUEU
				OCT		625341500000;	E."CR"
	QM3=.
	

; PG. 89 - CONVERT TO TWO DECIMAL CHARACTERS

	SUBTTL	CONVERT TO TWO DECIMAL CHARACTERS
	
	;			(A) ARE CONVERTED TO CHARACTERS AT POINTER IN C,B DESTROYED
	
	CTD:		IDIVI	A,^D10;
				JRST	CTD1;			OUTPUT HIGH ORDER ZEROS
				
	CTDB:		IDIVI	A,^D10;			CONVERT TWO DIGITS TO ASCII
				JUMPE	A,CTD2;			SUPPRESS LEADING ZEROS
				JRST	CTD1
				
	CTDR:		IDIVI	A,^D10
				JUMPN	A,CTD1
				MOVEI	A," ";				REPLACE LEADING ZEROS WITH BLANKS
				JRST	.+2
	CTD1:		ORI		A,60
				IDPB	A,C
	CTD2:		ORI		B,60
				IDPB	B,C
				IDPB	B,C
				DONE

	;					COMPUTE BINARY SECONDS FROM CLOCK CELLS
	
	ISEC:		MOVE	B,HR
				IMULI	B,^D60
				ADD		B,MIN
				IMULI	B,^D60
				ADD		B,SEC
				DONE
				

; PG. 90 - IN-SIGNAL ROUTINE

	SUBTTL	IN-SIGNAL ROUTINE
	
	IN10:		LDB		B,S.DU
				SKIPE	B;				SKIP IF NOT A DISC USER
				JRST	IN50;			FROM DISC USER: FLAG IT
	IN11:		CHS		RI.S;			CHANGE TO REQUEST IN STATE
				JRST	IN99
				
	IN20:		CHS		RIB.S
				JRST	IN99
				
	IN30:		SETZM	B
				DPB		B,S.DU;			RESET DISC FLAG
				JRST	IN11
				
	IN40:		TSX		GETBUF
				JRST	IN99;			FORGET IT IF NO BUFFER
				MOVEI	F,1;			INITIALIZE QUEUE COUNT
				HRRZ	B,QM
				CAIN	B,S.Q(S);		SKIP IF NOT THE  ONE OF INTEREST
				JRST	.+3
				HRRZ	B,0(B)
				AOJA	F,.-3;			COUNT PLACE IN QUEUE
				TSX		SQM;			SEND HIM THE MESSAGE
	IN99:		AOS		CT27;			COUNT INS WHICH RESULT IN ACTION
				DONE
				
	IN50:		MOVEI	A,1
				DPB		A,S.INR;		FLAG INTERRUPT SIGNAL
				JRST	IN99
				

; PG.91 - CARRIER-RETURN-SIGNAL ROUTINES
	
	SUBTTL	CARRIER-RETURN-SIGNAL ROUTINES

	CR.R:		AOS		CT31;			COUNT CARRIAGE RETURNS
				AOS		T7+2
				HRRZ	E,S.BUF(S);		GET BUFFER LOCATION
				HLRE	D,2(E);			GET CHARACTER COUNT
				SKIPGE	D
				SETCMM	D;				COMPLEMENT  IF TTY STATION
				ADDM	D,CT25;			GROSS SUM
				TSX		CVTLIN;			FROM DISTRIBUTION
				AOS		CPIL(B)
				HRRZ	B,USTAT(S) ;	TICKS SINCE LAST CR
				IMULI	B,D^60;			SCALE
				JSR		CVTL
				AOS		DCPI(C);		COUNT COMP/INTERACTION IN RANGE
				TSX		ISEC;			CURRENT TIME IN SECS
				HRLZ	C,USTAT(S) ;	LAST GREEN TIME
				HRLZM	B,USTAT(S) ;	THIS GREEN TIME
				SUB		B,C
				SKIPGE	B
				ADDI	B,^D24*^D3600;	MIDNIGHT CORRECTION
				IMULI	D,^D10;			UNITS ARE NOW 1/10TH MINUTE
				JSR		CVTL
				AOS		DTIM(C);		INTERACTION TIME DISTRIBUTION
				CHS		RC.S;			CHANGE STATE TO CR
				DONE

	;			CONVERT TO LINEAR RANGE

	CVTLIN:		MOVEI	B,0
				MOVEI	C,5
	CVT1:		CAMG	D,C
				DONE
				ADDI	C,5
				CAIGE	B,^D9
				AOJA	B,CVT1
				DONE
				

; PG. 92 - TRANSMISSION-OVER-SIGNAL ROUTINES

	SUBTTL	TRANSMISSION-OVER-SIGNAL ROUTINES
	
	TO:			SKIPN	S.BUF(S) ;		HALT IF NO BUFFER
	H7:			HALT	7;				NO SUCH BUFFER
				AOS		CT16;			COUNT LINES
				AOS		T7+3
				HRRZ	E,S.BU(S) ;		CHARACTER COUNT
				HRRZ	D,2(E)
				ADDM	D,CT26;			GLOBAL COUNT
				TSX		CVTLIN;			FIND DISTRIBUTION RANGE
				AOS		CPOL(B)
				MOVS	B,S.BUF(S) ;	PICK UP BUFFER HEADER
				XOR		B,S.BUF(S) ;	SEE IF LEFT=RIGHT
				JUMPE	B,TO1;			JUMP IF LAST BUFFER
				TSX		MBA;			PUT BUFFER ON AVAILABLE LIST
				CALL	C27;			INITIALIZE TRANSMISSION
				AOS		O(PP);			BUMP TO SECOND EXIT
	TO1:		DONE
	
	TODSU:		TSX		TO;				TO PREAMBLE
				TSX		SG;				LAST BUFFER SO CHANGE TO GREEN
				DONE
	
	TOCK:		TSX		TO:				"TO" PREAMBLE
				JRST	TOCK1:			ALWAYS UNCHOKE ON LAST BUFFER
				MOVE	E,N.UC;			GET UNCHOKE #
				HRRZ	B,S.BUF(S)
				JUMPE	B,TO3;			GET UNCHOKED (# BUFFERS <= CK #)
				HRRZ	B,0(B)
				SOJLE	E,.-2
				DONE;					STAY CHOKED (# BUFFERS > CK #)
				
	TOCK1:		TSX		MBA
	TO3:		CHS		UC.S;			CHANGE STATE TO UNCHOKE
				DONE
	
	TO99:		TSX		TO;				"TO" PREAMBLE
				TSX		MBA;			LAST BUFFER- MAKE IT AVAILABLE
				DONE
