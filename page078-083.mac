^L

; PG. 78 - INTER-CONSOLE SYNCHRONIZING SIGNALS

	SUBTTL	INTER-CONSOLE SYNCHRONIZING SIGNALS
	
	;	THESE ROUTINES ARE CALLED BY THE INTREPRETER TO SET (SSIG),
	;	RESET (RSIG),  AND TEST (TSIG) THE INTER-CONSOLE SIGNAL BITS.
	;	ENTRY VIA PUSHJ 0,ROUTINE.
	;	REGISTERS LISTED BELOW ARE PRESUMED FREE AND NOT SAVED.
	U=1
	V=2
	W=3
	X=4
	Y=5
	Z=6
	
	;	GET SIGNAL TABLE INDEX
	

	;	INPUT:	"TO" USER IN CUI
	;			"FORM" USER IN U
				
	;	RETURNS:"TO" INDEX IN Z
				"FROM" BIT IN V FOR SETTING AND TESTING
				
	;	DESTROYS #
	
	GTI:	MOVE	V,U
			ASH		V,-5;			HIGH ORDER PART OF "FROM"
			MOVE	Z,CUI
			IMULI	Z,S.M
			ADD		Z,V;			COMPUTE "TO" INDEX
			MOVE	W,I
			ANDI	Z,V;			MASK IN LOW ORDER OF "FROM"	
			MOVE	Z,CUI
			IMULI	Z,S.M
			ADD		Z,V;			COMPUTE "TO" INDEX
			MOVE	W,I
			ANDI	W,37;			MASK LOW ORDER OF "FROM"
			MOVEI	V,1
			ASH		V,0(W);			SHIFT TO PROPER POSITION (HIGH ON LEFT)
			POPJ	0,0
			
	;	RESET A SIGNAL BIT
	
	;	THE BIT "TO" CURRENT USER "FROM" (U) IS RESET
	
	RSIG:	PUSHJ	GTI;			GET TABLE INDEX
			MOVE	W,TTT(Z)
			TDZ		W,V
			MOVEM	W,TTT(Z)
			POPJ	0,0
			
	; 	TEST A SIGNAL BIT
	
	;	THE BIT "TO" CURRENT USE "FROM" (U) IS TESTED.
	;	REGISTER V IS NON-ZERO IF BIT IS SET.
	
	TSIG:	PUSHJ	GTI
			MOVE	W,TTT(Z)
			TDNN	W,V
			SETZM	V
			POPJ	0,0
^L

;PG. 79 - INTER-CONSOLE SYNCHRONIZING SIGNALS
			
	;	SET A SIGNAL BIT
	
	;	THE BIT "TO" (U) "FROM" CURRENT USER IS SET
	
	SSIG:	EXCH	U,CUI
			PUSHJ	GTI
			MOVE	W,TTT(Z)
			TDO		W,V
			MOVEM	W,TTT(Z)
			EXCH	U,CUI
			
	;	RE-ENABLE SIGNALLED USER IF WAITING
	
			EXCH	PP,PPSAV;			GET MONITOR PUSH REGISTER
			MOVE	Z,S;				SAVE TO REGISTER S
			MOVE	S,U;				"TO" USER TO S
			LDB		W,S.SIG
			SKIPE	W;					SKIP IF NOT WAITING
			CHS		COM.S;				ACTIVATE USER
			MOVE	S,Z;				RESTORE S
			EXCH	PP,PPSAV;			RESTORE PP
			POPJ	0,0
			
			
	
	;	TABLE OF INTER-CONSOLE SIGNALS
	
	;	ONE WORD PER 32 STATIONS PER STATION
	;	BITS ACCROS THE WORD CORRESPOND TO THE "FROM" CONSOLE
	;	AND WORDS OR GROUPS DOWN THE TABLE TO THE "TO" CONSOLE.
	
	TTT:	ZBLOK	S.M*N.S
	
^L	

;PG. 80 - DISC ACCOUNTING ROUTINES

	;		MIDNIGHT DISC SKULKER
	
	MDS:	SKIPE	DSS
			JRST	RESK
			SKIPE	DKBY
			JRST	MDS2
			
	;		START OR RESTART SKULK
	
	RESK:	CONSZ	PI,CHDC;			SKIP IF DATA CONTROL IDLE
			JRST	MDS2
			SETZM	SKT
			AOS		SKR;				FLAG DISC USING DC
			SETZM	B
			SKIPN	DSS
			HRLI	B,1;				INITIALIZATION BIT FOR IDG
			AOS		DSS;				FLAG SKULKING
			AOS		DKBY;				BUSY THE DISC
			HRRI	B,^D1000;			REQUEST SKULK FROM DISC PROCESSOR
			MOVEM	B,ACTION
			JSR		DISC.C
			DONE
			
	MDS2:	AOS		SKT;				FLAG START REQUEST
			DONE

;PG. 81 - DISC ACCOUNTING ROUTINES

	SKULK:	SETZM	SKR;				DISC NOT USING DC
			MOVE	B,RESULT
			CAIN	B,^D12
			JRST	SK5;				DISC ERROR
			MOVEI	B,^D9
	SK3:	MOVE	A,DBUF(B)
			TLINE	A,777777
			TSX		TLT;				CONVERT ASCII TO BINARY
			TLINE	A,777777
			MOVEM	F,DBUF(B)
			ADDI	B,5
			CAIGE	B,^D134
			JRST	SK3
			MOVE	S,[DEC -2];			CONTEXT FOR TAPE
			MOVEI	E,DBUF
			TSX		PUTB;				START TO TAPE
			JRST	DISC1;				GO TO RESTART THE TAPE
			
	SK1:	CAIE	B,^D2000;			SKIP IF NO MORE ERRORS
	H21:	HALT	21;					UNKNOWN ENTRY FROM DISC ROUTINES
			TSX		CMESS
			XMT 10,SK11;	SAY SKULK COMPLETE
			
	
	SK4:	SETZM	DISC.S
			SETZM	DSS
			SKIPN	S,DQ
			JRST	SK2
			SUBI	S,S.Q
			CHS		COM.S;				ENABLE WAITING DISC USER
			DONE
			
	SK2:	SETZM	DKBY
			DONE
	
	SK5:	TSX		CMMESS
			XMT 10,SK10; SAY NO SKULK
			
	SK10:	ASCII	?NO SKULK?
	
	SK11:	ASCII	?SKULK OK?
	
	
			DSS:	Z;					SET IF WE ARE SKULKING
			SKT:	Z;					SET WHEN TAPE OUTPUT COMPLETE
			SKR:	Z;					SET IF DISC USING DC FOR SKULK
			
^L

; PG. 82 - SHUTDOWN PROCEDURE

	;		SHUTDOWN JOSS SYSTEM
	
	SDP:	SETZB	D,N.SON;			ALLOW NO MORE ON
			MOVEI	C,1
			ORM		C,SWITCH;			BE SURE A MESSAGE IS GOING OUT
			MOVEI	C,QM-S.QUR;			TEST ALL BUT QUEUE AND OF
			OR		D,S.QUE-1(C);
			SOJG	C,.-1
			SKIPE	D;					SKIP IF ALL IS QUIET
			DONE	;					STILL SOME ACTION
			HRREI	S,-1;				TTY CONTEXT
			TSX		ODIS
			TSX		TWAIR
			CONO	MTC,1400;			END FILE LOG
			TSX		TWAIT
			CONO	MTC,7400;			BACK OVER IT
			TSX		CMESS
			XMT	23,TERM;  SYSTEM ALL DOWN
			
			CONO	PI,1000+CHAPR;		TURN OFF PROCESSOR INTERRUPTS
			SETZM	SWITCH;				BE SURE BEEP WONT INTERFERE
			JSR		SHUT;				TURN OFF ALL CONSOLES
			JRST	.

	TERM:	ASCII	?SYSTEM HAS SHUTDOWN?
	
^L	

; PG. 83 - MONITOR-DISTRIBUTOR INTERFACE

	SUBTTL	MONITOR-DISTRIBUTOR INTERFACE
	
	;		PROCESS DISTRIBUTOR SIGNALS
	PRSIG:	MOVEI	G,0;				ZERO ENTRY COUNT
	SP1:	HRRZ	S,SIGTBL(G) ;		GET ENTRY (XWD,SIGTYPE,STN#)
			HLRZ	B,SIGTBL(G) ;		TYPE
			CAMLE	S,S.OK
			JRST	SP3;				WE ARE IGNORING THIS GUY
			CAILE	B,^D5;				TEST FOR WITHIN SIGNAL LIMIT
	H6:		HALT	6;					BAD SIGNAL FROM IRWIN
			LDB		F,S.STA;			GET STATE
			LDB		C,T2(B);			GET NAME OF PROPER ROUTINE
			XCT		T3(C);				DO IT
	SP3:	CONO	PI,1000+CH630;		TURN OFF 630 INTERRUPTS
			AOS		G;					BUMP ENTRY COUNT
			CAML	G,SG.L;				COMPARE WITH LENGTH
			JRST	SP2
			CONO	PI,2000+CH630		TURN ON 630 INTERRUPTS
			JRST	SP1;				GO BACK FOR NEXT ITEM
	SP2:	SETZM	SG.L;				ZERO THE SIGNAL LIST
			CONO	PI,2000+CH630;		TURN ON 630 INTERRUPTS
			HRRZ	S,FAKE
			HRLZ	S,FAKE
			TRZN	B,400000;			SKIP IF PSEUDO SIGNAL
			DONE
			CAILE	B.4;				SKIP IF LEGITIMATE SIGNAL
			DONE
			CAILE	S,N.S;				SKIP IF LEGITIMATE STATION
			DONE
			LDB		F,S.STA;			GET STATE
			LDB		C,T2(B)
			XCT		T3(C);				DO THE ACTION ROUTINE
			SETZM	FAKE;				FLAG DONE
			DONE
			
			
