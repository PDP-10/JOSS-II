; PG 112

BJ5:	MOVE	S,CUI;		RECOVER STATION #
	MOVE	D,[ASCII ? ON-?]
	TSX	DOF;		DISPLAY INITIALS ON TTY
	EXCH	PP,PPSAV
	JRST	INTBEG;		GO TO BEGINNING OF INTERPRET

BJ6:	AOS	SEQ
	SEND	BJM7;		"DEPARTMENT"
	JRST	BJSU

BJ7:	TSX	BJAD;		GO TO APPROVE DEPT
	JRST	BJ8;		NO GOOD
	SOS	SEQ;		OK EXIT
	JRST	BJ3.3

BJ8:	AOS	SEQ
	SEND	BJM8;		"DEPT NAME OR NUMBER"
	JRST	BJSU

BJ9:	TSX	BJAD;		TRY FOR APPROVAL AGAIN
	JRST	BJ8+1;		NO GOOD - KEEP AT HIM
	SOS	SEQ
	JRST	BJ7+2;		TAKE OK EXIT

; PG 113

BJA1:	MOVE	B,BLANKS
	MOVEM	B,INITIALS
	MOVEI	I,4;		MAX OF 4 LETTERS
	MOVEI	C,SCT1;		SCAN TABLE LOCATION
	MOVE	B,C3;		OUTPUT POINTER
	TSX	SCAN;		GO TO SCAN THE BUFFER
	CAIN	I,4;		NOT APPROVED IF NO INITIALS
	JRST	BJA4
	AOS	0(PP);		BUMP TO EXIT FOR APPROVED
	MOVE	B,INITIALS
	MOVE	C,CUI
	MOVEM	B,MINT(C);	SAVE IN MONITOR AREA
	DONE

BJA2:	POP	PP,0;		BUMP UP ONE LEVEL TO SCAN EXIT
	DONE;			TAKE NOT APPROVED EXIT

ALPH1:	SOSL	1;		ALPHA SCAN FOR INITIALS - COUNT CHARACTERS
	JRST	3(D);		ADD TO STRING

	NOT APPROVED EXIT FOR INITIALS SCAN

BJA3:	POP	PP,0
BJA4:	MOVE	B,[ASCII /???  /]
	MOVEM	B,INITIALS;	RESTORE TEST CELL (FOR GOOD DRUM DATA)
	DONE;			TAKE NOT APPROVED EXIT

; PG 114

SCT1:	NOP;			BLANK
	JSP	D,ALPH1;	ALPHA
	JRST	BJA3;		NUMERIC
	JRST	BJA3;		SPECIAL
	JRST	BJA3;		ILLEGAL
	NOP;			PERIOD
	JRST	BJA3;		TAB
	NOP;			DASH
	JSP	D,END;		END OF STRING

DIGIT:	ANDI	C,17;		MASK TO NUMERIC
	JUMPN	A,DIG1;		JUMP IF NOT TESTING FOR LEADING ZEROS
	JUMPN	C,.+2;		IT IS NON-ZERO
	JRST	0(D);		IGNORE LEADING ZEROS
DIG1:	IMULI	A,^D10
	ADD	A,C;		CONSTRUCT BINARY RPN IN REG A
	ORI	C,60;		MAKE IT AND ASCII AGAIN
ALPHA:	SOSL	I;		COUNT CHARACTERS
DASH:	JRST	3(D);		ADD TO STRING
	JRST	BJA2;		MORE THAN 4 INITIALS, NOT APPROVED EXIT
END:	JRST	2(D);		EXIT FROM SCAN

; PG 115

BJA5:	MOVE	B,BLANKS
	MOVEM	B,JOBNO
	MOVEI	A,0;		PRESET LEADING ZERO SWITCH
	MOVEI	I,4;		MAX OF 4 DIGITS
	MOVEI	C,SCT2;		SCAN TABLE LOCATION
	MOVE	B,C4;		OUTPUT POINTER
	TSX	SCAN;		GO TO SCAN BUFFER
	MOVEM	A,SPARE1;	SAVE BINARY JOB NUMBER
	JUMPE	A,BJAN;		NO GOOD IF  ZERO
	CAIG	A,4;		1-4 ARE OK
	JRST	BJAY;		TAKE OK EXIT
	MOVEI	B,RPNS;		SIZE OF RPN RANGE TABLE
BJA5.2:	HLRZ	D,RPN-1(B);	LOW END OF OK RANGE
	CAMGE	A,D
	JRST	.+4
	HRRZ	D,RPN-1(B);	HIGH END OF OK RANGE
	CAMG	A,D
	JRST	BJAY;		ITS OK
	SOJG	B,BJA5.2;	GO FOR NEXT TABLE ENTRY

,	SEARCH SPECIAL TABLE

	MOVEI	B,SRPNS
BJS1:	LDB	D,PLOW
	JUMPE	D,BJS2;		IGNORE ZERO ENTRIES
	CAMGE	A,D
	JRST	BJS2
	LDB	D,PHIG
	CAMG	A,D
	JRST	BJS3
BJS2:	SOJG	B,BJS1
	JRST	BJAN;		NOT IN RANGE

,	HERE WE HAVE A JN IN OK RANGE

BJS3:	LDB	D,PSTN;		STATION NUMBER
	SKIPN	CUI
	JRST	BJS4;		ZERO IS OK
	CAME	D,CUI
	JRST	BJAN;		NOT ALLOWED ON THIS STATION
BJS4:	LDB	D,PDEP
	MOVEM	D,SPARE2;	SET DEPT NO.
BJAY:	AOS	0(PP);		BUMP TO APPROVAL EXIT
BJAN:	DONE

; PG 116

SRPN=.;		TABLE OF SPECIAL RPNS
	RADIX	10
	BYTE	(8) 78,^O5  (10) 950,974; SPARE
	BYTE	(8) 77,^O4  (10) 900,924; RAND,M BETHESDA
	BYTE	(8) 76,^O3  (10) 800,824; AFCRL
	BYTE	(8) 75,^O2  (10) 700,724; TAC LANGLEY, VS.
	BYTE	(8) 74,^O42 (10) 600,649; OSD
	BYTE	(8) 73,^O47 (10) 500,549; ARPA
	BYTE	(8) 72,^O43 (10) 400,449; AFCSA
	BYTE	(8) 71,^O37 (10) 300,399; AIR ACADEMY
	BYTE	(8) 70,^O33 (10) 200,299; SACRAMENTO
	RADIX	8
SRPNS=.-SRPN;	TABLE SIZE

PDEP:	POINT	8,SRPN-1(B),7
PSTN:	POINT	8,SRPN-1(B),^D15
PLOW:	POINT	10,SRPN-1(B),^D25
PHIG:	POINT	10,SRPN-1(B),^D35

,	TABLE OF LEGITIMATE RPN RANGES

	RADIX	10
RPN:	XWD	9900,9999
	XWD	9701,9899
	XWD	9660,9660
	XWD	9120,9550
	XWD	8210,8220
	XWD	7000,7130
	XWD	6701,6720
	XWD	5708,5735
	XWD	1001,1800
RPNS=.-RPN;
	RADIX	8

; PG 117

SCT2:	NOP;			BLANK
	JRST	BJA2;		ALPHA
	JSP	D,DIGIT;	NUMERIC
	JRST	BJA2;		SPECIAL
	JRST	BJA2;		ILLEGAL
	NOP;			PERIOD
	JRST	BJA2;		TAB
	JRST	BJA2;		DASH
	JSP	D,END;		END OF STRING
	
; PG 118

BJAD:	MOVE	B,[POINT 7,F];	OUTPUT POINTER
	MOVEI	C,SCT3;		CHAR TYPE EXECUTE TABLE
	SETZM	F
	SETZM	H,SPARE2
	SETZB	I,J
	TSX	SCAN
	JUMPE	I,BJA9;		JUMP IF NUMERICS RECEIVED
	AND	F,[BYTE (7) 137,137,137]; FORCE UPPER CASE
BJA7:	MOVEI	B,DEPTS;	GET SIZE OF DEPARTMENT TABLE
	MOVE	C,DEPT-1(B)
	AND	C,[BYTE (7) 177,177,177];  TAKE THREE CHARACTERS
	CAMN	C,F
	JRST	BJA8;		FOUND
	SOJG	B,BJA7+1;	LOOK FOR NEXT
	DONE;			NO GOOD

BJA8:	LDB	B,[POINT 7,DEPT-1(B),35]; GET DEPT NUMBER
	MOVEM	B,SPARE2;	SAVE IN	USER BLOCK
	AOS	0(PP);		BUMP TO APPROVAL EXIT
	DONE

BJA9:	MOVEI	B,DEPTS
	LDB	C,[POINT 7,DEPT-1(B),35]; GET DEPT NUMBER
	CAMN	C,H
	JRST	BJA8;		HE GOT ONE!
	SOJG	B,BJA9+1;	AROUND FOR NEXT
	DONE;			NONE FOUND - NOT OK

; PG 119

SCT3:	NOP;			IGNORE BLANKS
	JSP	D,BJD1;		ALPHA
	JSP	D,BJD2;		NUMERIC
	JSP	D,BJD1;		SPECIAL - TREAT AS ALPHA
	JRST	BJA2;		ILLEGAL - DENY
	NOP;			IGNORE PERIODS
	NOP;			IGNORE TABS
	NOP;			IGNORE DASH
	JSP	D,END;		END OF STRING

BJD1:	JUMPN	J,BJA2;		ALPHA SCAN - DENY IF PRIOR NUMERIC
	AOS	I
	CAIL	I,3;		NEED THREE ALPHAS
	JRST	1(D);		ENOUGH SEEN TO ADD TO STRING AND EXIST
	JRST	3(D);		ADD TO STRING

BJD2:	JUMPN	I,BJA2;		NUMERIC SCAN - BAD IF ALPHA
	ANDI	C,17;		MASK INTO NUMBER
	JUMPN	J,BJD22;	JUMP IF WE HAVE A DIGIT
	SKIPN	C
	JRST	0(D);		IGNORE LEADING ZEROS
BJD22:	IMULI	H,^D10
	ADD	H,C;		COMPUTE BINARY
	AOS	J
	CAIL	J,2;		NEED 2 DIGITS
	JRST	1(D);		ENOUGH
	JRST	3(D);		ADD TO STRING

; PG 120

	RADIX	10
DEPT:	BYTE	(21)"ADM"(15)23
	BYTE	(21)"AER"(15)32
	BYTE	(21)"AST"(15)35
	BYTE	(21)"COM"(15)81
	BYTE	(21)"COS"(15)11
	BYTE	(21)"CSD"(15)81
	BYTE	(21)"ELE"(15)33
	BYTE	(21)"ECO"(15)10
	BYTE	(7)"G",^O13,"A"(15)35;	LOWER CASE +
	BYTE	(7)"G",^O17,"A"(15)35;	LOWER CASE /
	BYTE	(21)"GEO"(15)35
	BYTE	(21)"LIB"(15)21
	BYTE	(21)"LOG"(15)12
	BYTE	(21)"MAT"(15)80
	BYTE	(21)"MFS"(15)20
	BYTE	(7)"M",^O12,"R"(15)26
	BYTE	(7)"M",^O17,"R"(15)26
	BYTE	(21)"PER"(15)28
	BYTE	(21)"PHY"(15)40
	BYTE	(14)"RD"(7)0(15)60
	BYTE	(21)"REP"(15)60
	BYTE	(21)"RES"(15)30
	BYTE	(21)"SEC"(15)27
	BYTE	(21)"SOC"(15)90
	BYTE	(21)"SSD"(15)90
	BYTE	(14)"SS"(7)0(15)90
	BYTE	(21)"SYO"(15)34
	BYTE	(21)"SYS"(15)34
	BYTE	(21)"WAS"(15)22
	BYTE	(14)"WO"(7)0(15)22
DEPTS=.-DEPT
	RADIX	8
