; PG 121

;	C IS SCAN TABLE LOCATION, B IS OUTPUT BYTE POINTER LOCATION
;	E LEFT IS CLOBBERED, SCAN TABLE RETURNS ARE: 0=IGNORE CHAR
;	1=ADD TO OUTPUT STRING AN EXIT FROM SCAN, 2=EXT FROM SCAN
;	3=ADD CHARACTER TO OUTPUT STRING.

SCAN:	ADDI	E,3;		BUMP POINTER DOWN TO TEXT
	HRLI	E,440700;	INPUT BYTE POINTER
	MOVEM	E,SCP1
	SUBI	E,3;		RESTORE BUFFER POINTER
MSCAN:	JUMPE	B,.+2;		SKIP IF CONTINUING OUTPUT
	MOVEM	B,SCP3;		OUTPUT BYTE POINTER
	HRRM	C,SC9;		EXECUTE BYTE POINTER
SC3:	ILDB	B,SCP1;		LOAD NEXT INPUT BYTE
	MOVEM	B,C;		SAVE THE BYTE
	ANDI	B,7;		MASK LOW ORDER
	MOVNI	B,-8(B);	COMPUTE 8-(B)
	ASH	B,2;		4(8-(B))
	DPB	B,SCP4;		SET UP BYTE POINTER
	MOVEM	C,B;		RECOVER INPUT BYTE
	ASH	B,-3;		HIGH 4 BITS FOR INDEX
	LDB	B,SCP2;		GET THE TYPE
	XCT	@SC9;		EXECUTE THE SCAN TABLE INSTRUCTION
	JRST	SC3;		SKIP CHARACTER
	IDPB	C,SCP3;		ADD TO STRING AND EXIT
	DONE;			EXIT FROM SCAN
	IDPB	C,SCP3;		ADD CHARACTER TO OUTPUT
	JRST	SC3

; PG 122

,	TYPES ARE:
,		0=BLANK
,		1=ALPHA
,		2=NUMERIC
,		3=SPECIAL
,		4=ILLEGAL
,		5=PERIOD
,		6=COMMA
,		7=DASH
,		8=END OF STRING

,	THERE ARE EIGHT 4 BIT CODES PER WORD WITH 4 ZEROES AT
,	THE END OF EACH WORD.

CART:	BYTE	(4)8,4,4,4,4,4,4,4,0; COLUMN 1
	BYTE	(4)3,6,3,3,8,8,4,4,0
	BYTE	(4)4,4,4,4,4,4,4,4,0
	BYTE	(4)4,4,4,4,4,4,4,4,0
	BYTE	(4)0,3,3,3,3,3,3,3,0;	COLUMN 2
	BYTE	(4)3,3,3,3,3,7,5,3,0
	BYTE	(4)2,2,2,2,2,2,2,2,0
	BYTE	(4)2,2,3,3,3,3,3,3,0
	BYTE	(4)3,1,1,1,1,1,1,1,0;	COLUMN 3
	BYTE	(4)1,1,1,1,1,1,1,1,0
	BYTE	(4)1,1,1,1,1,1,1,1,0
	BYTE	(4)1,1,1,3,3,3,3,8,0
	BYTE	(4)4,1,1,1,1,1,1,1,0;	COLUMN 4
	BYTE	(4)1,1,1,1,1,1,1,1,0
	BYTE	(4)1,1,1,1,1,1,1,1,0
	BYTE	(4)1,1,1,4,4,4,4,4,0

; PG 123

EJ:	JRST	.+1
	MOVEI	B,EJ1
	MOVEM	B,INTENT;	SET NEXT ENTRY IN CASE WE DONT GET A BUFFER
	MOVE	B,PAGNO
	JUMPE	B,EJ3;		NO RECORD IF INITIALIZATION INCOMPLETE
	MOVEI	B,1;		GO TO MONITOR FOR A BUFFER
	JRST	MONENT

EJ1:	EXCH	PP,PPSAV
EJ2:	TSX	ISEC
	MOVEM	B,2(E);		SET OFF TIME IN ACCOUNTING RECORD
	CAMGE	B,ONTIME	
	ADDI	B,^D3600*^D24;	HE WORKS OVER THE WITCHING HOUR
	SUB	B,ONTIME;	COMPUTE SESSION TIME
	JSR	CVTL
	AOS	SESTIM(C);	INCREMENT PROPER COUNTER
	MOVEM	B,8(E);		SET IN ACCOUNTING RECORD
	ADDM	B,T7+4
	MOVE	B,[XWD ^D14,1];	COUNT AND TYPE FOR TAPE RECORD
	MOVEM	B,1(E)
	MOVE	C,[POINT 7,3(E)]
	XMT 12,DATE
	XMT 5, INITIALS
	MOVE	B,SPACE1;	BINARY PROJECT NUMBER
	MOVEM	B,6(E)
	MOVE	B,COMTIM

; PG 124

	MOVEM	B,7(E);		SAVE HIS COMPUTING TIME
	IDIVI	B,^D10;		SCALE BY 10 FOR DISPLAY
	JSR	CVTL
	AOS	CCTIM(C);	ACCUMULATE IN COMPUTE TIME DISTRIBUTION
	MOVE	S,CUI
	SETZM	MINT(S);	CLEAR MONITOR INITIALS
	MOVEM	S,^D9(E);	STATION  # TO ACCOUNTING RECORD
	MOVE	B,USIZE
	MOVEM	B,^D10(E)
	IMULI	B,^D6;		LOW END = 10 CELLS
	JSR	CVTL
	AOS	DSIZE(C);	COUNT IN SIZE DISTRIBUTION
	LDB	B,S.BLOCK
	MOVEM	B,^D11(E);	RECORD # OF CORE BLOCKS USED
	HRREI	S,-2;		GET CONTEXT FOR TAPE I/O
	MOVE	B,PAGNO
	MOVEM	B,^D12(E);	NUMBER OF PAGES OUTPUT TO ACCT RECORD
	MOVE	B,SPARE2
	MOVEM	B,^D13(E);	DEPT # TO ACCT RECORD
	MOVE	B,SPACE3;	CHARGE UNITS
	MOVEM	B,^D14(E)
	TSX	PUTB;		OUTPUT THE RECORD
	EXCH	PP,PPSAV
EJ3:	MOVEI	B,^D12;		TO MONITOR FOR FINAL OFF
	JRST	MONENT

; PG 125

,		CHANGES STATE OF USER IN S TO STATE IN E (AN
,		INDEX TO THE STATE TABLE)
,		CLOBBERS B, C, E, AND F.
CHS.:	LDB	B,S.STA;	CURRENT STATE
	CAMN	B,E
	DONE;			EXIT IF OLD STATE EQUALS NEW
	HRRZI	B,S.QUE(B);	ADDRESS OF HEADER
	MOVE	C.B;		SAVE POINTER TO HEADER
CHS1:	HRRZ	F,0(B);		CONTENTS OF ITEM
	JUMPN	F,.+2;		WE HAVENT GOT SOMETHING WRONG, HAVE WE?
H24:	HALT	24;		USER STATE AND QUEUE ARE DIFFERENT
	CAIN	F,S.Q(S);	DOES ITEM POINT TO DESIRED USER?
	JRST	CHS2;		YES
	HRRZI	B,0(F);		NEW ADDRESS OF ITEM
	JRST	CHS1
CHS2:	MOVE	F,0(F);		GET CELL TO BE UNLINKED
	HRRM	F,0(B);		TAKE OUT OF LIST
	TRNE	F,-1;		DID WE JUST MOVE UP THE LAST IN THE LIST?
	JRST	CHS2.5;		NO
	MOVEI	F,0(B);		ADDRESS OF LAST ON LIST
	HRLM	F,0(C);		END LINK TO HEADER
	CAMN	F,C;		DOES END LINK POINT TO HEADER?
	SETZM	0,(C);		YEA VERILY--ZERO IT OUT
CHS2.5:	DPB	E,S.STA;	UPDATE STATE

,	PUT ON NEW LIST

CHS4:	HRRI	E,S.QUE(E)
	SKIPN	B,0(E);		BRING UP LIST HEADER AND
	JRST	CHS5;		JUMP IF LIST IS EMPTY
	SKIPN	CSS;		SKIP IF LIST TOP SIGNAL IS ON
	JRST	CHS4.5;		NO--PUT ON BOTTOM OF LIST
	HRRM	B,S.Q(S);
	HRRI	B,S.Q(S);	NEW ITEM TO LIST TOP
	MOVEM	B,0(E);		RESTORE HEADER
	DONE

CHS4.5:	HLRZ	B,0(E);		GET ADDRESS OF END OF LIST
	MOVE	F,0(B);		GET LAST ITEM ON LIST
	HRRI	F,S.Q(S);	LINK IN CURRENT USER
	MOVEM	F,0(B);		PUT ON END OF LIST
	HRLM	F,0(E);		END LINK TO LIST HEADER
	HLLZS	S.Q(S);		ZERO LAST IN LIST
	DONE

CHS5:	MOVEI	F,S.Q(S);
	HRL	F,F;		LINK AS TOP OF QUEUE
	MOVEM	F,0(E)
	HLLZS	S.Q(S);		ZERO END ITEM
	DONE

; PG 126

,	STATION # IN REGISTER S RIGHT
;	INPUT IS POINTER TO BUFFER IN E RIGHT, ANYTHING IN LEFT
,	B IS SCRATCH REGISTER.  STARTS THE TRANSMISSION IF IT IS
,	THE ONLY BUFFER ATTACHED.

PUTB:	CONO	PI,1000+CHCTY;	TURN OFF THE TRAPS
	CAME	S,[DEC -2];	SKIP IF TAPE
	JRST	PUTB5;		NOT TAPE
	FSW B
	TRNE	B,TPQ;		QUIET TAPE SWITCH UP?
	JRST	PUTB4;		YES - RETURN BUFFER
	HRRZ	B,N.BUF
	CAIG	B,5;		FORGET TAPE OUTPUT IF FIVE OR
	JRST	PUTB4;		FEWER BUFFERS AVAILABLE
PUTB5:	HLRZ	B.S.BUF(S);	POINTER TO LAST BUFFER
	JUMPN	B,PUTB1;	JUMP IF BUFFERS ATTACHED
	HRL	E,E
	HLLZS	0(E);		ZERO LINK
	MOVEM	E,S.BUF(S);	NEW BUFFER HEADER.
	JUMPGE	S,PUTB2;	TEST FOR JOSS STATION OUTPUT
	CAMGE	S,[DEC -2];	IS THE RANGE OK?
H25:	HALT	25;		ILLEGAL I/O CONTEXT
	XCT	PUTB2(S);	DO THE START ROUTINE
	JRST	PUTB3
	TSX	CIO;		TAPE I/O START
	TSX	BIO;		CONSOLE TTY I/O START
PUTB2:	CALL	C27;		JOSS CONSOLE I/O START
	JRST	PUTB3
PUTB1:	MOVEM	E,0(B);		CHAIN NEW BUFFER TO LAST.
	HLLZS	0(E);		ZERO CURRENT BUFFER LINK
	HRLM	E,S.BUF(S);	LAST BUFFER POINTER TO BUFFER HEADER.
PUTB3:	CONO	PI,2000+CHDAT+CHCTY;	TURN ON THE TRAPS
	DONE
PUTB4:	TSX	MBA1;		GIVE BACK THE BUFFER
	JRST	PUTB3

; PG 127

;	EXITS +2 WITH BUFFER LOCATION IN E OR
;	      +1 IF NONE AVAILABLE.
;	USES ONLY REGISTER E.

GETBUF:	CONO	PI,1000+CHDAT+CHCTY;  TURN OFF THE TRAPS
	SOSL	N.BUF;		COUNT DOWN AVAIL BUFFER AND TEST
	JRST	GET1
	SETZM	N.BUF;		NONE AVAILABLE, EXIT 1
	JRST	GET2
GET1:	HRRZ	E,L.BUF;	POINTER TO TOP BUFFER
	HRR	E,0(E);		POINTER TO NEXT BUFFER
	HRL	E,L.BUF;	POINTER TO AVAIL BUFFER
	HRRM	E,L.BUF;	UPDATE HEADER
	TRNN	E,-1;		SKIP IF NOT LAST ON LIST
	SETZM	L.BUF;		LAST, SO ZERO ENTIRE HEADER
	HLRZ	E,E;		POINT TO BUFFER IN E RIGHT
	HLLZS	0(E);		ZERO LINK
	JUMPN	E,.+2
H11:	HALT	11;		ZERO CANT BE A BUFFER
	AOS	0(PP)
GET2:	CONO	PI,2000+CHDAT+CHCTY;  TURN ON THE TRAPS
	DONE;			TAKE EXIT 2

; PG 128

;	RETURNS BUFFER ATTACHED TO S TO AVAILABLE
;	CLOBBERS B,E

MBA:	CONO	PI,1000+CHDAT+CHCTY;  TURN OF THE TRAPS
	HRRZ	E,S.BUF(S);	GET BUFFER HEADER
	SKIPN	E
H12:	HALT	12;		ZERO CANT BE A BUFFER
	HRRZ	B,0(E);		GET LINK FROM ATTACHED BUFFER
	SKIPN	B;		SKIP IF NOT LAST ON LIST
	SETZM	S.BUF(S);	LAST, SO ZERO HEADER
	HRRM	B,S.BUF(S);	UPDATE HEADER
	CAIE	E,DBUF;		SKIP IF SPECIAL DISC BUFFER
	JRST	MBA1
	AOS	SKT;		FLAG OUTPUT COMPLETE
	JRST	MBA5;		AND DONT PUT ON AVAILABLE

;		RETURN BUFFER IN E TO AVAILABLE

MBA1:	CONO	PI,1000+CHDAT+CHCTY;  TURN OFF THE TRAPS
	HRRZ	B,L.BUF
MBA4:	CAMN	B,E;		THIS BUFFER SHOULD NOT BE ON THE LIST ALREADY
H13:	HALT	13;		BUT IT IS!!!
	JUMPE	B,.+3;		IF WE ARE AT THE END
	HRRZ	B,0(B);		GET THE NEXT ON THE LIST
	JRST	MBA4;		AND GOT TO TEST IT
	HLRZ	B,L.BUF;	ADDRESS OF LAST ON AVAILABLE
	JUMPE	B,MBA3;		ARE THERE NONE? JUMP IF SO.
	HRRM	E,0(B);		LINK OBJECT BUFFER TO LAST
MBA2:	HRLM	E,L.BUF;	AND TO HEADER
	SETZM	0(E);		ZERO HEADER OF OBJECT BUFFER
	AOS	N.BUF;		COUNT ONE MORE AVAILABLE
MBA5:	CONO	PI,2000+CHDAT+CHCTY;  TURN ON THE TRAPS
	DONE

MBA3:	HRRM	E,L.BUF;	SET UP FOR ONLY BUFFER ON LIST
	JRST	MBA2

; PG 129

;	ROUTINE AT CALLER + 1 IS EXECUTED TO FILL BUFFER
;		CLOBBERS S,E,C,B.

CMESS:	TSX	GETBUF
	JRST	CM1
	HRREI	S,-1;		CONSOLE OUTPUT CONTEXT
	MOVE	C,[POINT 7,1(E)]; POINT TO BUFFER
	XCT	@0(PP);		DO ROUTINE TO FILL THE BUFFER
	XMT 3,CRLF; TERMINATE THE BUFFER
	TSX	PUTB;		TRANSMIT IT
CM1:	AOS	0(PP);		BUMP TO EXIT
	DONE

; PG 130

,	ON ENTRY E IS  XWD MSGPTR,BUFFERPTR
,	B IS CLOBBERED, E IS UNCHANGED

BJ9.1:	HLRZ	B,E;		ADDR OF BLT CONTROL WORD IN MESSAGE
	MOVE	C,E;		SAVE BUFFER POINTER
	MOVE	B,0(B);		PICK UP XWD FIRST LOC, CT
	HLL	E,B;		FIRST LOC TO BLT CONT WORD
	ADDI	E,3;		BUMP TP TEXT LOCATION
	ADD	B,E;		CT + FIRST LOC = LAST WD + 1
	BLT	E,-1(B);	TRANSFER MSG TO BFR
	MOVE	E,C;		RESTORE BUFFER POINTER
	DONE

; PG 131
BJM1:	XWD	.+1,BJM1E-.
;	JOSS AT YOUR SERVICE, INITIALS PLEASE:
	BYTE	(7) 15,112,117,123,123,40,141,164,40,171;

	BYTE	(7) 157,165,162,40,163,145,162,166,151,143;

	BYTE	(7) 145,56,15,111,156,151,164,151,141,154;

	BYTE	(7) 163,40,160,154,145,141,163,145,72,40;

BJM1E:	BYTE	(7) O;
BJM2:	XWD	.+1,BJM2E-.;	PROJECT NUMBER PLEASE:
	BYTE	(7) 120,162,157,152,145,143,164,40,156,165

	BYTE	(7) 155,142,145,162,72
BJM2E:	BYTE	(7) 40,0

BJM3:	XWD	.+1,BJM3E-.;	ONE TO FOUR LETTERS PLEASE:
	BYTE	(7) 117,156,145,40,164,157,40,146,157,165

	BYTE	(7) 162,40,154,145,164,164,145,162,163,40

	BYTE	(7) 160,154,145,141,163
BJM3E:	BYTE	(7) 145,72,40,0

BJM4:	XWD	.+1,BJM4E-.;	PLEASE USE A LEGITIMATE NUMBER:
	BYTE	(7) 120,154,145,141,163,145,40,165,163,145

	BYTE	(7) 40,141,40,154,145,147,151,164,151,155

	BYTE	(7) 141,164,145,40,156,165,155,142,145,162

BJM4E:	BYTE	(7) 72,40,0

BJM5:	XWD	.+1,BJM5E-.;	IF YOU ARE LEARNING USE "1" :
	BYTE	(7) 111,146,40,171,157,165,12,40,141,162

	BYTE	(7) 145,40,154,145,141,162,156,151,156,147

	BYTE	(7) 40,165,163,145,40,42,61,42,40,72

BJM5E:	BYTE	(7) 40,0

; PG 132

SDM:	XWD	.+1,BJM6E-.;	SYSTEM SHUTTING DOWN
	BYTE	(7) 15,123,171,163,164,145,155,40.163,150

	BYTE	(7) 165,164,164,151,156,147,40,144,157,167

BJM6E:	BYTE	(7) 156,56,15,0
BJM7:	XWD	.+1,BJM7E-.;	DEPARTMENT:
	BYTE	(7) 104,145,160,141,162,164,155,145,156,164

BJM7E:	BYTE	(7) 72,40
BJM8:	XWD	.+1,BJM8E-.;	DEPARTMENT NAME OR NUMBER:
	BYTE	(7) 104,145,160,141,162,164,155,145,156,164

	BYTE	(7) 40,156,141,155,145,40,157,162,40,156

	BYTE	(7) 165,155,142,145,162
BJM8E:	BYTE	(7) 72,40,0

; PG 133
	END
