; PG 67

,	COMPACT CORE

COMPACT:SETZB	B,H
	SKIPN	CORE(B)
	AOS	H;		COUNT FREE BLOCKS IN H
	AOS	B
	CAMGE	B,N.C
	JRST	.-4
	TSX	COMP1;		DO A SINGLE COMPACT
	DONE
	JRST	.-2

;	DO ONE COMPACT

COMP1:	TSX	FM;		FIND A MOVE
	DONE;			NONE
	MOVE	D,C
	ADD	D,B;		BEGINNING OF FREED AREA
	TSX	BLTC;		DO THE MOVE
COMP2:	SETZM	CORE(D);	ZERO FREED CORE
	AOS	D
	CAMGE	D,G
	JRST	COMP2
	MOVE	E,C
	ADDM	C,CT50
	ADDM	E,T7+5
	TSX	RUL;		RESET USER LOCATIONS
	AOS	0(PP)
	DONE;			TAKE "DID ONE" EXIT

; PG 68

;	FIND A CORE MOVE

,	EXISTS +1 IF NONE, +2 IF A MOVE IS FOUND
;	ON ENTRY H= # OF FREE BLOCKS
;	ON EXIT:
;		B= 1ST FREE LOCATION ("TO" BLOCK)
;		E= 1ST NON-ZERO BLOCK ("FROM" BLOCK)
;		C= # OF BLOCKS TO MOVE
;		G= # OF FIRST UNAFFECTED BLOCK
;	F AND I ARE CLOBBERED

FM:	MOVEI	B,0
FM1:	MOVE	D,CORE(B)
	JUMPE	D,FM2;		SEARCH FOR 1ST UNUSED BLOCK
	AOS	B
	CAME	B,N.C;		END TEST
	JRST	FM1
	DONE;			EXIT: NO FREE BLOCKS IN CORE

FM2:	MOVE	E,B;		B IS "TO" LOCATION (1ST FREE BLOCK)
	MOVE	I,H
FM3:	SKIPE	CORE(E);	SEARCH FOR 1ST NON-ZERO BLOCK
	JRST	FM4
	AOS	E
	SOSG	I
	DONE;			WE HAVE ALL FREE BLOCKS TOGETHER
	CAME	E,N.C;		END TEST
	JRST	FM3
	DONE;			CORE IS ALREADY COMPACT

FM4:	MOVE	C,E;		E IS "FROM" LOCATION (1ST NON-ZERO)
FM5:	MOVE	F,CORE(C)
	JUMPE	F,FM7
	TLNE	F,200000;	SKIP IF DRUM NOT USING BLOCK
	JRST	FM7;		DO NOT MOVE DRUM CORE
	AOS	C
	CAME	C,N.C;		END TEST
	JRST	FM5

FM7:	MOVE	G,C;		SAVE # OF FIRST UNAFFECTED BLOCK
	SUB	C,E;		C HAS # OF BLOCKS TO MOVE
	SKIPG	C
	DONE;			NO NEED TO MOVE ZERO BLOCKS
	AOS	0(PP);		TO SECOND EXIT--MOVE FOUND
	DONE

; PG 69

,	FIND A USER TO BRING IN

SELSWP:	SKIPN	ON
	SKIPE	N.DRM
	JRST	.+2;		SELECT FOR SWAP IF "ON" USERS OR SOME ON DRUM
	DONE
	MOVE	C,[POINT 5,SI1];  TABLE OF CANDIDATES
SS1:	ILDB	B,C
	CAIN	B,END.S
	DONE;			NONE REQUIRED
	MOVEI	A,1
	HRRZ	B,S.QUE(B);	QUEUE HEADER
	JUMPE	B,SS1;		JUMP IF LIST EMPTY
SS2:	HRRZ	S,B
	SUBI	S,S.Q;		STATION INDEX
	LDB	D,S.COR;	GET CORE LOCATION
	LDB	F,S.GK
	JUMPN	F,SS3;		DONT BRING IN A GRONKED USER
	LDB	F,S.STA;	AND STATE
	CAIN	F,ON.S
	JRST	SS10;		DEAL WITH "ON" SEPARATELY
	JUMPE	D,SS4;		JUMP IF NOT IN CORE
SS3:	HRRZ	B,0(B);		GET NEXT ON LIST
	JUMPE	B,SS1;		JUMP TO GET NEXT LIST
	AOJA	A,SS2

,	USER # IN S, STATE IN F, PLACE IN QUEUE IN A

,	FIND A FREE BLOCK FOR HIM

SS4:	HRRZM	S,DMIN;		SET "IN" CANDIDATE
	HRLM	A,DMIN;		SET PLACE IN QUEUE
SS5:	LDB	C,S.BLOCK;	GET SIZE
	TSX	FINDB;		FIND A FREE BLOCK OF THE RIGHT SIZE
	JRST	SS15;		FOUND, GO TO START IN

,	TRY TO FIND SCATTERED FREE BLOCKS

	SETZB	B,E
SS6:	SKIPN	CORE(B)
	AOS	E;		COUNT FREE BLOCKS
	AOS	B
	CAMGE	B,N.C
	JRST	SS6
	CAMGE	E,C;		SKIP IF ENOUGH FREE TO COMPACT
	JRST	SS17;		CANT COMPACT
	TSX	COMPACT;	COMPACT CORE
	LDB	C,S.BLOCK
	TSX	FINDB
	JRST	SS15;		FOUND
	JRST	SS17;		STILL CANT FIND--TRY SOMETHING ELSE

; PG 70

,	DEAL WITH "ON" SEPARATELY

SS10:	MOVE	B,N.C
	SUBI	B,1
	SKIPN	CORE(B)
	DONE;			WE HAVE A FREE BLOCK. SELINT WILL FIND
	SOJGE	B,.-2;		SEARCH CORE FOR A FREE BLOCK
	MOVE	B,[POINT 5,S12];  89SEARCH LIST
	MOVE	H,[TSX SS18];	TEST ROUTINE
	TSX	FIND
	DONE;			CANT FIND ONE BEST GET COMPUTING
	HRROM	S,DMIN;		SET NO IN REQUIRED
SS11:	LDB	C,S.BLOCK
	TSX	OSWAP
	DONE

,	READY FOR "IN" SWAP; B= TOP OF IN BLOCK

SS15:	LDB	C,S.BLOCK
	SUBI	C,1
	SUB	B,C
	MOVEM	B,DMIBK;	SET "IN" BLOCK LOCATION
	TSX	ISWAP
	DONE

,	FIND A LOW PRIORITY USER OF THE PROPER SIZE

SS17:	MOVE	F,C
	MOVE	B,[POINT 5,S11]
	MOVE	H,[TSX SS18]
	TSX	FIND
	JRST	SS30;		CANT FIND A SINGLE - TRY MULTIPLE
	JRST	SS11;		FOUND - GO TO START OUT

SS18:	LDB	G,S.COR
	SKIPN	G;		SKIP IF IN CORE
	DONE
	CAMGE	D,G;		SKIP IF BIG ENOUGH
	DONE
	AOS	0(PP);		BUMP TO SUCCESS EXIT
	DONE

; PG 71

;	FIND CANDIDATE(S) FOR DRUM
SS10:	BYTE	(5) QP.S,ABG.S,DSU.S,GR.S,DQ.S,CK.S,DIP.S,DCT.S,END.S

SS11:	BYTE	(5) QP.S,ABG.S,DSU.S,GR.S,END.S
SS12:BYTE (5) QP.S,ABG.S,DSU.S,GR.S,DQ.S,CK.S,DIP.S,DCT.S,COM.S,END.S


,	FIND MULTIPLE USERS TO KICK OUT
,	E= # OF FREE BLOCKS, F= REQUIRED SIZE TO FREE

SS30:	MOVE	B,[POINT 5,S10]
	MOVE	H,[TSX SS35];	TEST ROUTINE
	MOVE	G,DMNR
	SUB	F,E;		REQUIRED BLOCKS TO FREE
	TSX	FIND
	JRST	SS40;		NO SUCCESS - TRY COMPUTE QUEUE

,	START OUT, POSSIBLY MULTIPLE, USERS

SS32:	POP	G,S;		GET FIRST USER TO WRITE
	LDB	C,S.BLOCK
	TSX	OSWAP;		START HIM TO DRUM
	MOVEM	G,DMNR;		SAVE LIST OF USERS TO WRITE
	TLNE	G,777777;	SKIP IF ONLY ONE TO WRITE
	JRST	SS33
	LDB	B,S.BLOCK;	BLOCKS WRITTEN
	HRRZ	S,DMIN;		USER TO COME IN
	LDB	C,S.BLOCK;	BLOCKS TO COME IN
	CAMGE	B,C;		SKIP IF WE ARE FREEING ENOUGH SPACE
	AOS	SS98;		FIRE COMPACT ACTION
	DONE;			DONE WITH SWAP SELECTION

SS33:	MOVEI	C,1
	AOS	SS98;		SIGNAL CORE COMPACT NEEDED
SS34:	POP	G,S
	LDB	D,S.BLOCK
	LDB	B,S.COR
	SUBI	B,BBLOCK
	DPB	C,S.ID;		BUSY ALL BLOCKS INVOLVED IN SWAP
	AOS	B
	SOJG	D,.-2
	TLNE	G,777777
	JRST	SS34
	DONE

SS35:	LDB	A,S.COR
	SKIPN	A
	DONE;			NOT IN CORE TRY NEXT
	SUB	F,D
	PUSH	G,S;		SAVE AS USER TO WRITE
	SKIPLE	F;		SKIP IF WE HAVE SELECTED ENOUGH
	DONE
	AOS	0(PP)
	DONE;			TAKE SUCCESS EXIT

; PG 72

,	NOW WE MUST KICK OUT A COMPUTE USER
,	F= REQUIRED BLOCKS TO FREE, DMIN: R=USER FOR IN,L= PLACE IN QUEUE
,	G= CURRENT LIST TO WRITE
,	E= # OF FREE BLOCKS

SS40:	MOVE	S,DMIN
	LDB	B,S.STA;	GET STATE OF GUY COMING IN
	MOVEI	D,1
	MOVEI	A,1
	CAIN	B,COM.S;	SKIP IF "IN" USER NOT ON COM QUEUE
	HLRZ	A,S;		GET "INS" PLACE IN QUEUE
	MOVE	C,COM;		GET COMPUTE QUEUE HEADER
	JUMPE	C,SS45;		NONE IN COMPUTE - BEST GET TO COMPUTING
	MOVEI	B,END.S
	PUSH	PP,B;		PUT A FLAG ON THE LIST
SS41:	HRRZ	S,C
	SUBI	S,S.Q
	PUSH	PP,S;		UNRAVEL COM LIST TO SEARCH BACKWARD
	AOS	D
	HRLM	D,0(PP);	RECORD PLACE IN QUEUE
	HRRZ	C,0(C)
	JUMPN	C,SS41;		JUMP IF NOT LAST ON QUEUE
SS42:	POP	PP,S;		GET USER FROM INVERTED QUEUE
	CAIN	S,EN.S
	JRST	SS45;		END OF QUEUE
	HLRZ	D,S;		PLACE IN QUEUE
	CAMG	D,A
	JRST	SS44;		CANT FIND USER OF LOW ENOUGH PRIORITY
	LDB	B,S.COR
	JUMPE	B,SS42;		JUMP IF OUT OF CORE
	SUB	F,B;		FOUND ONE, DECREMENT REQUIRED SIZE
	PUSH	G,S;		PUT ON WRITE LIST
	JUMPG	F,SS42;		GO FOR MORE IF NEEDED
	POP	PP,B
	CAIE	B,END.S
	JRST	.-2
	AOS	T7+6;		COUNT COMPUTE USERS KICKED OUT
	JRST	SS32;		SUCCESS--GO FOR FIRST WRITE

SS44:	POP	PP,B
	CAIE	B,END.S
	JRST	.-2

SS45:	MOVE	B,[XWD 0,DMNR]
	MOVEM	D,DMNR;		RESET WRITE QUEUE HEADER
	DONE;			CANNOT SET UP WRITE--NEED TO COMPUTER
	
TEST:	MOVEI	S,N.S-1
TE1:	LDB	B,S.COR
	JUMPE	B,TE2;		JUMP IF NOT IN CORE
	ASH	B,^D10
	MOVE	B,2(B);		INITIALS FROM USERS BLOCK
	CAME	B,MINT(S)
H22:	HALT	22;		NOT THE SAME AS CORE RECORD
TE2:	SOJGE	S,TE1
	DONE

; PG 73

,	COMPACT CORE FOR SWAP IN

SS90:	TSX	TEST
	TSX	COMPACT;	COMPACT CORE
	TSX	TEST
	MOVE	S,DMIN
	SETZM	SS99;		RESET COMPACT SWITCH
	LDB	C,S.BLOCK
	TSX	FINDB
	JRST	SS15
	SETZM	DMBY
	DONE;			NOT ROOM ENOUGH - MORECORE MUST HAVE STOLEN ONE

SS98:	Z;	SET IF MULTI WRITE
SS99:	Z;	SET TO REQUEST COMPACTION OF CORE AND IN SWAP

; PG 74

,	FIND FIRST USER IN STATES LISTED AT POINTER IN B
;	WHICH SATISFIES TEST IN H (THAT SKIPS ON SUCCESS).

,	C IS DESTROYED, S IS SET TO FOUND USER

FIND:	ILDB	C,B;		INDEX TO STATE HEADER
	CAIE	C,END.S;	SKIP IF END
	JRST	F1
	DONE;			FAILURE EXIT

F1:	HRRZ	C,S.QUE(C);	LIST HEADER
	JUMPE	C,FIND;		JUMP IF LIST EMPTY
F2:	HRRZ	S,C
	SUBI	S,S.Q;		COMPUTE STATION INDEX
	LDB	D,S.BLOCK
	XCT	H;		DO TEST
	JRST	F3
	AOS	0(PP)
	DONE;			TEST SUCCEEDS

F3:	HRRZ	C,0(C);		TEST ROUTINE FAILS; GET NEXT ON LIST
	JUMPN	C,F2;		JUMP IF AN ENTRY
	JRST	FIND;		GO FOR NEXT LIST
